{"ast":null,"code":"import _toConsumableArray from\"/Users/graj/Todo-Application-in-ReactJS/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/graj/Todo-Application-in-ReactJS/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';export default(function(initialState){var _useState=useState(initialState),_useState2=_slicedToArray(_useState,2),todos=_useState2[0],setTodos=_useState2[1];return{todos:todos,addTodo:function addTodo(todoText){var trimmedText=todoText.trim();if(trimmedText.length>0)setTodos([].concat(_toConsumableArray(todos),[trimmedText]));},deleteTodo:function deleteTodo(todoIndex){var newTodos=todos.filter(function(_,index){return index!==todoIndex;});setTodos(newTodos);}};});","map":{"version":3,"sources":["/Users/graj/Todo-Application-in-ReactJS/src/components/UsetodoState.js"],"names":["useState","initialState","todos","setTodos","addTodo","todoText","trimmedText","trim","length","deleteTodo","todoIndex","newTodos","filter","_","index"],"mappings":"oUAAA,OAAQA,QAAR,KAAuB,OAAvB,CAEA,eAAe,SAACC,YAAD,CAAkB,eAELD,QAAQ,CAACC,YAAD,CAFH,wCAExBC,KAFwB,eAEjBC,QAFiB,eAI/B,MAAO,CACLD,KAAK,CAALA,KADK,CAELE,OAAO,CAAE,iBAACC,QAAD,CAAc,CACnB,GAAMC,CAAAA,WAAW,CAAGD,QAAQ,CAACE,IAAT,EAApB,CACA,GAAID,WAAW,CAACE,MAAZ,CAAqB,CAAzB,CACIL,QAAQ,8BAAKD,KAAL,GAAYI,WAAZ,GAAR,CACP,CANI,CAOLG,UAAU,CAAE,oBAACC,SAAD,CAAe,CACzB,GAAMC,CAAAA,QAAQ,CAAGT,KAAK,CAACU,MAAN,CAAa,SAACC,CAAD,CAAIC,KAAJ,QAAcA,CAAAA,KAAK,GAAKJ,SAAxB,EAAb,CAAjB,CACAP,QAAQ,CAACQ,QAAD,CAAR,CACD,CAVI,CAAP,CAYD,CAhBD","sourcesContent":["import {useState} from 'react';\n\nexport default (initialState) => {\n\n  const [todos, setTodos] = useState(initialState);\n\n  return {\n    todos,\n    addTodo: (todoText) => {\n        const trimmedText = todoText.trim();\n        if (trimmedText.length > 0) \n            setTodos([...todos, trimmedText]);\n    },\n    deleteTodo: (todoIndex) => {\n      const newTodos = todos.filter((_, index) => index !== todoIndex);\n      setTodos(newTodos);\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}