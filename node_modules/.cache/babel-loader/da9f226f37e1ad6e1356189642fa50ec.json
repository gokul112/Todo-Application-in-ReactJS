{"ast":null,"code":"var _jsxFileName = \"/Users/graj/projects/react-todo/react-todo/src/components/Todotext.js\";\nimport React from 'react';\nimport { TextField } from '@material-ui/core';\nimport usetodoInputstate from './usetodoInputstate';\n\nconst Todotext = ({\n  saveTodo\n}) => {\n  const {\n    todoValue,\n    onChange,\n    reset\n  } = usetodoInputstate(\"\");\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n      saveTodo(todoValue);\n      reset();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    placeholder: \"Add todo\",\n    margin: \"normal\",\n    value: todoValue,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Todotext;","map":{"version":3,"sources":["/Users/graj/projects/react-todo/react-todo/src/components/Todotext.js"],"names":["React","TextField","usetodoInputstate","Todotext","saveTodo","todoValue","onChange","reset","event","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAEjC,QAAM;AAACC,IAAAA,SAAD;AAAWC,IAAAA,QAAX;AAAoBC,IAAAA;AAApB,MAA6BL,iBAAiB,CAAC,EAAD,CAApD;AACI,sBACI;AAAM,IAAA,QAAQ,EAAGM,KAAD,IAAW;AACvBA,MAAAA,KAAK,CAACC,cAAN;AACAL,MAAAA,QAAQ,CAACC,SAAD,CAAR;AACAE,MAAAA,KAAK;AACN,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAC,UAAnB;AAA8B,IAAA,WAAW,EAAC,UAA1C;AAAqD,IAAA,MAAM,EAAC,QAA5D;AAAqE,IAAA,KAAK,EAAEF,SAA5E;AAAuF,IAAA,QAAQ,EAAEC,QAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AAUH,CAbD;;AAeA,eAAeH,QAAf","sourcesContent":["import React from 'react';\nimport { TextField } from '@material-ui/core';\nimport usetodoInputstate from './usetodoInputstate';\n\nconst Todotext = ({saveTodo}) => {\n\nconst {todoValue,onChange,reset} = usetodoInputstate(\"\");\n    return (\n        <form onSubmit={(event) => {\n            event.preventDefault();\n            saveTodo(todoValue);\n            reset();\n          }}>\n            <TextField variant=\"outlined\" placeholder=\"Add todo\" margin=\"normal\" value={todoValue} onChange={onChange} />\n        </form>\n\n    )\n}\n\nexport default Todotext;\n"]},"metadata":{},"sourceType":"module"}